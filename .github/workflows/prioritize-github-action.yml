# replace .war with .jar or .ear if needed
name: Whitesource Prioritize Java with Maven

on:
  push:
    branches: [ release* ]
  pull_request:
    branches: [ release* ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn clean install -DskipTests=true
      - name: WhiteSource Unified Agent Scan
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          APIURL: https://saas.whitesourcesoftware.com
          WS_APIKEY: ${{secrets.APIKEY}}
          WS_USERKEY: ${{secrets.USERKEY}}
          WS_PRODUCTNAME: GH_${{github.event.repository.name}}
          WS_PROJECTNAME: ${{github.ref}}_Prioritize
          WS_ENABLEIMPACTANALYSIS: true
          WS_REQUIREKNOWNSHA1: false
          WS_RESOLVEALLDEPENDENCIES: false
          WS_MAVEN_RESOLVEDEPENDENCIES: true
          WS_MAVEN_AGGREGATEMODULES: true
          WS_FILESYSTEMSCAN: false
          WS_GENERATEPROJECTDETAILSJSON: true
        run: |
          curl -LJO https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar
          echo Unified Agent downloaded successfully
          WARFILE=$(find ./ -type f -wholename "*/target/*.war")
          export WS_FILESYSTEMSCAN=false
          java -jar wss-unified-agent.jar -appPath $WARFILE -d ./
          WS_PROJECTTOKEN=$(jq -r '.projects | .[] | .projectToken' ./whitesource/scanProjectDetails.json)
          REDSHIELD=$(curl --request POST $APIURL'/api/v1.3' --header 'Content-Type: application/json' --header 'Accept-Charset: UTF-8'  --data-raw '{   'requestType' : 'getProjectSecurityAlertsByVulnerabilityReport',   'userKey' : '$WS_USERKEY',   'projectToken': '$WS_PROJECTTOKEN', 'format' : 'json'}' | jq '.alerts | .[] | select(.euaShield=="RED") | .vulnerabilityId')
          echo "REDSHIELD:"$REDSHIELD
          GHISSUE=$(gh issue list -S $REDSHIELD --json number --jq '.[] | .number ')
          echo "GHISSUE:"$GHISSUE
          KEYUUID=$(curl --request POST $APIURL'/api/v1.3' --header 'Content-Type: application/json' --header 'Accept-Charset: UTF-8'  --data-raw '{   'requestType' : 'getOrganizationEffectiveUsageAnalysis',   'userKey' : '$WS_USERKEY',   'orgToken': '$WS_APIKEY','format' : 'json'}' | jq -r '.products | .[] | select(.productName=="$WS_PRODUCTNAME") | .projects | .[] | select(.projectName=="$WS_PROJECTNAME") | .libraries | .[] | select(.resultingShield=="RED") | .keyUuid')
          echo "KEYUUID:"$KEYUUID
          PROJECTID=$(curl --request POST $APIURL'/api/v1.3' --header 'Content-Type: application/json' --header 'Accept-Charset: UTF-8'  --data-raw '{   'requestType' : 'getOrganizationEffectiveUsageAnalysis',   'userKey' : '$WS_USERKEY',   'orgToken': '$WS_APIKEY','format' : 'json'}' | jq '.products | .[] | select(.productName=="$WS_PRODUCTNAME") | .projects | .[] | select(.projectName=="$WS_PROJECTNAME") | .projectId ')
          echo "PROJECTID:"$PROJECTID
          EUALINK="$APIURL/Wss/WSS.html#!libraryVulnerabilities;uuid=$KEYUUID;project=$PROJECTID"
          echo $EUALINK
          gh issue comment $GHISSUE --body "$EUALINK"